"use strict"; function _instanceof(e, t) { return null != t && "undefined" != typeof Symbol && t[Symbol.hasInstance] ? !!t[Symbol.hasInstance](e) : e instanceof t } function _classCallCheck(e, t) { if (!_instanceof(e, t)) throw new TypeError("Cannot call a class as a function") } function _defineProperties(e, t) { for (var n = 0; n < t.length; n++) { var i = t[n]; i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i) } } function _createClass(e, t, n) { return t && _defineProperties(e.prototype, t), n && _defineProperties(e, n), e } var Carousel = function () { function e(t) { var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}; _classCallCheck(this, e), this.CarouselMotion = n.CarouselMotion ? n.CarouselMotion : "default", this.naviPosition = n.naviPosition ? n.naviPosition : "bottom", this.naviStyle = n.naviStyle ? n.naviStyle : "dot", this.autoMove = !!n.autoMove && n.autoMove, this.autoMoveTime = n.autoMoveTime ? n.autoMoveTime : 3e3, this.element = t, this.carouselIndex = 0, this.autoMoveReady, this.element.children[0].style.width = "".concat(this.element.clientWidth * this.element.children[0].children.length, "px"); for (var i = 0; i < this.element.children[0].children.length; i++)this.element.children[0].children[i].style.width = "".concat(this.element.clientWidth, "px"); this._naviMaker(), this._optionSetting(), this.autoMove && this._autoMoveMouseEvent() } return _createClass(e, [{ key: "_naviMaker", value: function () { var e = this, t = ""; if ("arrow" === this.naviStyle) this.element.children[1].setAttribute("class", "navi-arrow"), t += '<div class="navi-arrow-left">Left</div>', t += '<div class="navi-arrow-right">Right</div>'; else for (var n = 0; n < this.element.children[0].children.length; n++)t += "<span ".concat(0 === n ? 'class="navi-on"' : "", "></span>"); this.element.children[1].innerHTML = t; for (var i = function (t) { "arrow" === e.naviStyle ? e.element.children[1].children[t].onclick = function () { e.autoMove && clearInterval(e.autoMoveReady), e.carouselIndex = t ? e.carouselIndex >= e.element.children[0].children.length - 1 ? 0 : e.carouselIndex + 1 : e.carouselIndex <= 0 ? e.element.children[0].children.length - 1 : e.carouselIndex - 1, e._moveAction(e.carouselIndex) } : e.element.children[1].children[t].addEventListener("click", function () { e.autoMove && clearInterval(e.autoMoveReady), e.carouselIndex = t, e._moveAction(t) }) }, l = 0; l < this.element.children[1].children.length; l++)i(l) } }, { key: "_autoMoveMouseEvent", value: function () { var e = this; this.autoMoveReady = setInterval(function () { e.carouselIndex >= e.element.children[0].children.length - 1 ? e.carouselIndex = 0 : e.carouselIndex = e.carouselIndex + 1, e._moveAction(e.carouselIndex) }, this.autoMoveTime), this.element.addEventListener("mouseenter", function () { clearInterval(e.autoMoveReady) }), this.element.addEventListener("mouseleave", function () { e.autoMoveReady = setInterval(function () { e.carouselIndex >= e.element.children[0].children.length - 1 ? e.carouselIndex = 0 : e.carouselIndex = e.carouselIndex + 1, e._moveAction(e.carouselIndex) }, e.autoMoveTime) }) } }, { key: "_moveAction", value: function (e) { if ("prev" === this.CarouselMotion) e === this.element.children[0].children.length - 1 ? (this.element.children[0].style.transform = "translate(-".concat(.8 * this.element.clientWidth * e - (this.element.clientWidth - .8 * this.element.clientWidth), "px, 0)"), this.element.children[0].style.msTransform = "translate(-".concat(.8 * this.element.clientWidth * e - (this.element.clientWidth - .8 * this.element.clientWidth), "px, 0)"), this.element.children[0].style.MozTransform = "translate(-".concat(.8 * this.element.clientWidth * e - (this.element.clientWidth - .8 * this.element.clientWidth), "px, 0)"), this.element.children[0].style.WebkitTransform = "translate(-".concat(.8 * this.element.clientWidth * e - (this.element.clientWidth - .8 * this.element.clientWidth), "px, 0)")) : (this.element.children[0].style.transform = "translate(-".concat(.8 * this.element.clientWidth * e, "px, 0)"), this.element.children[0].style.msTransform = "translate(-".concat(.8 * this.element.clientWidth * e, "px, 0)"), this.element.children[0].style.MozTransform = "translate(-".concat(.8 * this.element.clientWidth * e, "px, 0)"), this.element.children[0].style.WebkitTransform = "translate(-".concat(.8 * this.element.clientWidth * e, "px, 0)")); else if ("fade" === this.CarouselMotion) for (var t = 0; t < this.element.children[0].children.length; t++)this.element.children[0].children[e] === this.element.children[0].children[t] ? (this.element.children[0].children[e].style.opacity = "1", this.element.children[0].children[e].style.visibility = "visible") : (this.element.children[0].children[t].style.opacity = "0", this.element.children[0].children[t].style.visibility = "hidden"); else this.element.children[0].style.transform = "translate(-".concat(this.element.clientWidth * e, "px, 0)"), this.element.children[0].style.msTransform = "translate(-".concat(this.element.clientWidth * e, "px, 0)"), this.element.children[0].style.MozTransform = "translate(-".concat(this.element.clientWidth * e, "px, 0)"), this.element.children[0].style.WebkitTransform = "translate(-".concat(this.element.clientWidth * e, "px, 0)"); if ("dot" === this.naviStyle || !this.naviStyle) { for (var n = 0; n < this.element.children[1].children.length; n++)this.element.children[1].children[n].setAttribute("class", ""); this.element.children[1].children[e].setAttribute("class", "navi-on") } } }, { key: "_optionSetting", value: function () { var e = this; setTimeout(function () { if ("slide" !== e.CarouselMotion && "prev" !== e.CarouselMotion || (e.element.children[0].style.transition = "0.4s all"), "prev" === e.CarouselMotion) { e.element.children[0].style.width = "".concat(.8 * e.element.clientWidth * e.element.children[0].children.length, "px"); for (var t = 0; t < e.element.children[0].children.length; t++)e.element.children[0].children[t].style.width = "".concat(.8 * e.element.clientWidth, "px") } else if ("fade" === e.CarouselMotion) { e.element.children[0].style.width = "".concat(e.element.clientWidth, "px"), e.element.children[0].style.height = "".concat(e.element.children[0].children[0].clientHeight, "px"); for (var n = 0; n < e.element.children[0].children.length; n++)e.element.children[0].children[n].setAttribute("class", "carousel-item carousel-fade") } "dot" !== e.naviStyle && e.naviStyle || ("top" === e.naviPosition ? e.element.children[1].style.top = "10px" : "left" === e.naviPosition || "right" === e.naviPosition ? ("left" === e.naviPosition ? e.element.children[1].style.left = "10px" : e.element.children[1].style.right = "10px", e.element.children[1].style.width = "15px", e.element.children[1].style.top = "50%", e.element.children[1].style.marginTop = "-".concat(e.element.children[1].clientHeight / 2, "px")) : e.element.children[1].style.bottom = "10px") }, 0) } }]), e }();